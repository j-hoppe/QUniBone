/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RPC_BLINKENLIGHT_API_H_RPCGEN
#define _RPC_BLINKENLIGHT_API_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define RPC_BLINKENLIGHT_API_MAX_NAME_LEN 80

typedef char *rpc_blinkenlight_api_nametype;
#define RPC_BLINKENLIGHT_API_MAX_INFOSTRING_LEN 1024

typedef char *rpc_blinkenlight_api_infostringtype;

enum rpc_blinkenlight_api_control_type_enum {
	rpc_blinkenlight_api_input_switch = 1,
	rpc_blinkenlight_api_output_lamp = 2,
};
typedef enum rpc_blinkenlight_api_control_type_enum rpc_blinkenlight_api_control_type_enum;

typedef rpc_blinkenlight_api_control_type_enum rpc_blinkenlight_api_control_type_t;

struct rpc_blinkenlight_api_panel_struct {
	rpc_blinkenlight_api_nametype name;
	u_int controls_inputs_count;
	u_int controls_outputs_count;
	u_int controls_inputs_values_bytecount;
	u_int controls_outputs_values_bytecount;
};
typedef struct rpc_blinkenlight_api_panel_struct rpc_blinkenlight_api_panel_struct;

struct rpc_blinkenlight_api_control_struct {
	rpc_blinkenlight_api_nametype name;
	u_char is_input;
	rpc_blinkenlight_api_control_type_t type;
	int radix;
	int value_bitlen;
	int value_bytelen;
};
typedef struct rpc_blinkenlight_api_control_struct rpc_blinkenlight_api_control_struct;

struct rpc_blinkenlight_api_controlvalues_struct {
	int error_code;
	struct {
		u_int value_bytes_len;
		u_char *value_bytes_val;
	} value_bytes;
};
typedef struct rpc_blinkenlight_api_controlvalues_struct rpc_blinkenlight_api_controlvalues_struct;

struct rpc_blinkenlight_api_getinfo_res {
	int error_code;
	rpc_blinkenlight_api_infostringtype info;
};
typedef struct rpc_blinkenlight_api_getinfo_res rpc_blinkenlight_api_getinfo_res;

struct rpc_blinkenlight_api_getpanelinfo_res {
	int error_code;
	rpc_blinkenlight_api_panel_struct panel;
};
typedef struct rpc_blinkenlight_api_getpanelinfo_res rpc_blinkenlight_api_getpanelinfo_res;

struct rpc_blinkenlight_api_getcontrolinfo_res {
	int error_code;
	rpc_blinkenlight_api_control_struct control;
};
typedef struct rpc_blinkenlight_api_getcontrolinfo_res rpc_blinkenlight_api_getcontrolinfo_res;

struct rpc_blinkenlight_api_setpanel_controlvalues_res {
	int error_code;
};
typedef struct rpc_blinkenlight_api_setpanel_controlvalues_res rpc_blinkenlight_api_setpanel_controlvalues_res;
#define RPC_ERR_OK 0
#define RPC_ERR_PARAM_ILL_CLASS 1
#define RPC_ERR_PARAM_ILL_OBJECT 2
#define RPC_ERR_PARAM_ILL_PARAM 3
#define RPC_PARAM_CLASS_BUS 1
#define RPC_PARAM_CLASS_PANEL 2
#define RPC_PARAM_CLASS_CONTROL 3
#define RPC_PARAM_HANDLE_PANEL_BLINKENBOARDS_STATE 1
#define RPC_PARAM_VALUE_PANEL_BLINKENBOARDS_STATE_OFF 0
#define RPC_PARAM_VALUE_PANEL_BLINKENBOARDS_STATE_TRISTATE 1
#define RPC_PARAM_VALUE_PANEL_BLINKENBOARDS_STATE_ACTIVE 2
#define RPC_PARAM_HANDLE_PANEL_MODE 2
#define RPC_PARAM_VALUE_PANEL_MODE_NORMAL 0
#define RPC_PARAM_VALUE_PANEL_MODE_LAMPTEST 1
#define RPC_PARAM_VALUE_PANEL_MODE_ALLTEST 2
#define RPC_PARAM_VALUE_PANEL_MODE_POWERLESS 3

struct rpc_param_cmd_get_struct {
	u_int object_class;
	u_int object_handle;
	u_int param_handle;
};
typedef struct rpc_param_cmd_get_struct rpc_param_cmd_get_struct;

struct rpc_param_result_struct {
	int error_code;
	u_int object_class;
	u_int object_handle;
	u_int param_handle;
	u_int param_value;
};
typedef struct rpc_param_result_struct rpc_param_result_struct;

struct rpc_param_cmd_set_struct {
	u_int object_class;
	u_int object_handle;
	u_int param_handle;
	u_int param_value;
};
typedef struct rpc_param_cmd_set_struct rpc_param_cmd_set_struct;

struct rpc_test_cmdstatus_struct {
	int bytecount;
};
typedef struct rpc_test_cmdstatus_struct rpc_test_cmdstatus_struct;

struct rpc_test_data_struct {
	int fixdata1;
	int fixdata2;
	struct {
		u_int vardata_len;
		u_char *vardata_val;
	} vardata;
};
typedef struct rpc_test_data_struct rpc_test_data_struct;

struct rpc_blinkenlight_api_getcontrolinfo_1_argument {
	u_int arg1;
	u_int arg2;
};
typedef struct rpc_blinkenlight_api_getcontrolinfo_1_argument rpc_blinkenlight_api_getcontrolinfo_1_argument;

struct rpc_blinkenlight_api_setpanel_controlvalues_1_argument {
	u_int arg1;
	rpc_blinkenlight_api_controlvalues_struct valuelist;
};
typedef struct rpc_blinkenlight_api_setpanel_controlvalues_1_argument rpc_blinkenlight_api_setpanel_controlvalues_1_argument;

#define BLINKENLIGHTD 99
#define BLINKENLIGHTD_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define RPC_BLINKENLIGHT_API_GETINFO 1
extern  rpc_blinkenlight_api_getinfo_res * rpc_blinkenlight_api_getinfo_1(CLIENT *);
extern  rpc_blinkenlight_api_getinfo_res * rpc_blinkenlight_api_getinfo_1_svc(struct svc_req *);
#define RPC_BLINKENLIGHT_API_GETPANELINFO 2
extern  rpc_blinkenlight_api_getpanelinfo_res * rpc_blinkenlight_api_getpanelinfo_1(u_int , CLIENT *);
extern  rpc_blinkenlight_api_getpanelinfo_res * rpc_blinkenlight_api_getpanelinfo_1_svc(u_int , struct svc_req *);
#define RPC_BLINKENLIGHT_API_GETCONTROLINFO 3
extern  rpc_blinkenlight_api_getcontrolinfo_res * rpc_blinkenlight_api_getcontrolinfo_1(u_int , u_int , CLIENT *);
extern  rpc_blinkenlight_api_getcontrolinfo_res * rpc_blinkenlight_api_getcontrolinfo_1_svc(u_int , u_int , struct svc_req *);
#define RPC_BLINKENLIGHT_API_SETPANEL_CONTROLVALUES 4
extern  rpc_blinkenlight_api_setpanel_controlvalues_res * rpc_blinkenlight_api_setpanel_controlvalues_1(u_int , rpc_blinkenlight_api_controlvalues_struct , CLIENT *);
extern  rpc_blinkenlight_api_setpanel_controlvalues_res * rpc_blinkenlight_api_setpanel_controlvalues_1_svc(u_int , rpc_blinkenlight_api_controlvalues_struct , struct svc_req *);
#define RPC_BLINKENLIGHT_API_GETPANEL_CONTROLVALUES 5
extern  rpc_blinkenlight_api_controlvalues_struct * rpc_blinkenlight_api_getpanel_controlvalues_1(u_int , CLIENT *);
extern  rpc_blinkenlight_api_controlvalues_struct * rpc_blinkenlight_api_getpanel_controlvalues_1_svc(u_int , struct svc_req *);
#define RPC_PARAM_GET 100
extern  rpc_param_result_struct * rpc_param_get_1(rpc_param_cmd_get_struct , CLIENT *);
extern  rpc_param_result_struct * rpc_param_get_1_svc(rpc_param_cmd_get_struct , struct svc_req *);
#define RPC_PARAM_SET 101
extern  rpc_param_result_struct * rpc_param_set_1(rpc_param_cmd_set_struct , CLIENT *);
extern  rpc_param_result_struct * rpc_param_set_1_svc(rpc_param_cmd_set_struct , struct svc_req *);
#define RPC_TEST_DATA_TO_SERVER 1000
extern  rpc_test_cmdstatus_struct * rpc_test_data_to_server_1(rpc_test_data_struct , CLIENT *);
extern  rpc_test_cmdstatus_struct * rpc_test_data_to_server_1_svc(rpc_test_data_struct , struct svc_req *);
#define RPC_TEST_DATA_FROM_SERVER 1001
extern  rpc_test_data_struct * rpc_test_data_from_server_1(rpc_test_cmdstatus_struct , CLIENT *);
extern  rpc_test_data_struct * rpc_test_data_from_server_1_svc(rpc_test_cmdstatus_struct , struct svc_req *);
extern int blinkenlightd_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define RPC_BLINKENLIGHT_API_GETINFO 1
extern  rpc_blinkenlight_api_getinfo_res * rpc_blinkenlight_api_getinfo_1();
extern  rpc_blinkenlight_api_getinfo_res * rpc_blinkenlight_api_getinfo_1_svc();
#define RPC_BLINKENLIGHT_API_GETPANELINFO 2
extern  rpc_blinkenlight_api_getpanelinfo_res * rpc_blinkenlight_api_getpanelinfo_1();
extern  rpc_blinkenlight_api_getpanelinfo_res * rpc_blinkenlight_api_getpanelinfo_1_svc();
#define RPC_BLINKENLIGHT_API_GETCONTROLINFO 3
extern  rpc_blinkenlight_api_getcontrolinfo_res * rpc_blinkenlight_api_getcontrolinfo_1();
extern  rpc_blinkenlight_api_getcontrolinfo_res * rpc_blinkenlight_api_getcontrolinfo_1_svc();
#define RPC_BLINKENLIGHT_API_SETPANEL_CONTROLVALUES 4
extern  rpc_blinkenlight_api_setpanel_controlvalues_res * rpc_blinkenlight_api_setpanel_controlvalues_1();
extern  rpc_blinkenlight_api_setpanel_controlvalues_res * rpc_blinkenlight_api_setpanel_controlvalues_1_svc();
#define RPC_BLINKENLIGHT_API_GETPANEL_CONTROLVALUES 5
extern  rpc_blinkenlight_api_controlvalues_struct * rpc_blinkenlight_api_getpanel_controlvalues_1();
extern  rpc_blinkenlight_api_controlvalues_struct * rpc_blinkenlight_api_getpanel_controlvalues_1_svc();
#define RPC_PARAM_GET 100
extern  rpc_param_result_struct * rpc_param_get_1();
extern  rpc_param_result_struct * rpc_param_get_1_svc();
#define RPC_PARAM_SET 101
extern  rpc_param_result_struct * rpc_param_set_1();
extern  rpc_param_result_struct * rpc_param_set_1_svc();
#define RPC_TEST_DATA_TO_SERVER 1000
extern  rpc_test_cmdstatus_struct * rpc_test_data_to_server_1();
extern  rpc_test_cmdstatus_struct * rpc_test_data_to_server_1_svc();
#define RPC_TEST_DATA_FROM_SERVER 1001
extern  rpc_test_data_struct * rpc_test_data_from_server_1();
extern  rpc_test_data_struct * rpc_test_data_from_server_1_svc();
extern int blinkenlightd_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_rpc_blinkenlight_api_nametype (XDR *, rpc_blinkenlight_api_nametype*);
extern  bool_t xdr_rpc_blinkenlight_api_infostringtype (XDR *, rpc_blinkenlight_api_infostringtype*);
extern  bool_t xdr_rpc_blinkenlight_api_control_type_enum (XDR *, rpc_blinkenlight_api_control_type_enum*);
extern  bool_t xdr_rpc_blinkenlight_api_control_type_t (XDR *, rpc_blinkenlight_api_control_type_t*);
extern  bool_t xdr_rpc_blinkenlight_api_panel_struct (XDR *, rpc_blinkenlight_api_panel_struct*);
extern  bool_t xdr_rpc_blinkenlight_api_control_struct (XDR *, rpc_blinkenlight_api_control_struct*);
extern  bool_t xdr_rpc_blinkenlight_api_controlvalues_struct (XDR *, rpc_blinkenlight_api_controlvalues_struct*);
extern  bool_t xdr_rpc_blinkenlight_api_getinfo_res (XDR *, rpc_blinkenlight_api_getinfo_res*);
extern  bool_t xdr_rpc_blinkenlight_api_getpanelinfo_res (XDR *, rpc_blinkenlight_api_getpanelinfo_res*);
extern  bool_t xdr_rpc_blinkenlight_api_getcontrolinfo_res (XDR *, rpc_blinkenlight_api_getcontrolinfo_res*);
extern  bool_t xdr_rpc_blinkenlight_api_setpanel_controlvalues_res (XDR *, rpc_blinkenlight_api_setpanel_controlvalues_res*);
extern  bool_t xdr_rpc_param_cmd_get_struct (XDR *, rpc_param_cmd_get_struct*);
extern  bool_t xdr_rpc_param_result_struct (XDR *, rpc_param_result_struct*);
extern  bool_t xdr_rpc_param_cmd_set_struct (XDR *, rpc_param_cmd_set_struct*);
extern  bool_t xdr_rpc_test_cmdstatus_struct (XDR *, rpc_test_cmdstatus_struct*);
extern  bool_t xdr_rpc_test_data_struct (XDR *, rpc_test_data_struct*);
extern  bool_t xdr_rpc_blinkenlight_api_getcontrolinfo_1_argument (XDR *, rpc_blinkenlight_api_getcontrolinfo_1_argument*);
extern  bool_t xdr_rpc_blinkenlight_api_setpanel_controlvalues_1_argument (XDR *, rpc_blinkenlight_api_setpanel_controlvalues_1_argument*);

#else /* K&R C */
extern bool_t xdr_rpc_blinkenlight_api_nametype ();
extern bool_t xdr_rpc_blinkenlight_api_infostringtype ();
extern bool_t xdr_rpc_blinkenlight_api_control_type_enum ();
extern bool_t xdr_rpc_blinkenlight_api_control_type_t ();
extern bool_t xdr_rpc_blinkenlight_api_panel_struct ();
extern bool_t xdr_rpc_blinkenlight_api_control_struct ();
extern bool_t xdr_rpc_blinkenlight_api_controlvalues_struct ();
extern bool_t xdr_rpc_blinkenlight_api_getinfo_res ();
extern bool_t xdr_rpc_blinkenlight_api_getpanelinfo_res ();
extern bool_t xdr_rpc_blinkenlight_api_getcontrolinfo_res ();
extern bool_t xdr_rpc_blinkenlight_api_setpanel_controlvalues_res ();
extern bool_t xdr_rpc_param_cmd_get_struct ();
extern bool_t xdr_rpc_param_result_struct ();
extern bool_t xdr_rpc_param_cmd_set_struct ();
extern bool_t xdr_rpc_test_cmdstatus_struct ();
extern bool_t xdr_rpc_test_data_struct ();
extern bool_t xdr_rpc_blinkenlight_api_getcontrolinfo_1_argument ();
extern bool_t xdr_rpc_blinkenlight_api_setpanel_controlvalues_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RPC_BLINKENLIGHT_API_H_RPCGEN */

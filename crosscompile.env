# crosscompile.env
#
# Environment variables for BeagleBoard and RaspberryPi crosscompilers
# see the makefiles for use
#
# to be included in .bashrc, .profile, etc ...
#
# Copied from BlinkenBone project ... full of trash.


#
# for my remoteinstall system
#
REMOTEINSTALL_REMOTE_SSH_USERHOST=root@blinkenbone export REMOTEINSTALL_REMOTE_SSH_USERHOST


# cross development for beaglebone:
# DO NOT include the *environent files here,
# this will make devleopment for local platform (Ubuntu) impossible
# best solution:
# set just PATH
# so a plain "gcc" is still Ubuntu-gcc
# and a "arm-angstrom-linux-gnueabi-gcc" is also found

export BBB_SYSROOTS=${HOME}/angstrom_2016/setup-scripts/build/tmp-angstrom_v2014_12-glibc/sysroots
export BBW_SYSROOTS=${HOME}/angstrom_v2012_05/setup-scripts/build/tmp-angstrom_v2012_05-eglibc/sysroots
#export BB_SYSROOTS=${HOME}/angstrom_distro/setup-scripts/build/tmp-angstrom_2010_x-eglibc/sysroots

# v2010:
#export BB_KERNELDIR=${BB_SYSROOTS}/beaglebone/kernel
# v2012.05:
# exists after bitbake systemd-image
export BBW_KERNELDIR=${BBW_SYSROOTS}/../work/beaglebone-angstrom-linux-gnueabi/linux-ti33x-psp-3.2.42-r19b+gitr720e07b4c1f687b61b147b31c698cb6816d72f01/packages-split/kernel-dev/usr/src/kernel
# 2016:
export BBB_KERNELDIR=${BBB_SYSROOTS}/beaglebone/usr/src/kernel

#2012
# export PATH=${BB_SYSROOTS}/i686-linux/usr/bin/armv7a-angstrom-linux-gnueabi:${PATH}
#2016, for driver build
#export PATH=${BBB_SYSROOTS}/x86_64-linux/usr/bin/arm-angstrom-linux-gnueabi:${PATH}

# call to CC
# BBW, 2012
export BBW_CC="${BBW_SYSROOTS}/i686-linux/usr/bin/armv7a-angstrom-linux-gnueabi/arm-angstrom-linux-gnueabi-gcc -mthumb -march=armv7-a"
# BBB, 2016
# export BB_CC="arm-angstrom-linux-gnueabi-gcc -mthumb-interwork -mfloat-abi=hard -mfpu=neon -march=armv7-a"
#export BBB_CC="${BBB_SYSROOTS}/x86_64-linux/usr/bin/arm-angstrom-linux-gnueabi/arm-angstrom-linux-gnueabi-gcc -mthumb-interwork -mfloat-abi=hard -mfpu=neon -march=armv7-a"

# Debian 2016
#export BBB_CC="${HOME}/bbb_debian/gcc-linaro-5.3.1-2016.05-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf-gcc -mthumb-interwork -mfloat-abi=hard -mfpu=neon -march=armv7-a"
# Debian 2017
export BBB_CC="${HOME}/bbb_debian/gcc-linaro-6.4.1-2017.11-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf-gcc -mthumb-interwork -mfloat-abi=hard -mfpu=neon -march=armv7-a"


# use toolchain used in
#PATH="/home/joerg/CodeSourcery/Sourcery_CodeBench_Lite_for_ARM_GNU_Linux/bin:${PATH}"

# New environment setting added by Sourcery CodeBench Lite for ARM GNU/Linux on Tue Dec 27 12:04:28 CET 2011 1.
# The unmodified version of this file is saved in /home/joerg/.profile782992682.
# Do NOT modify these lines; they are used to uninstall.
#PATH="/home/joerg/CodeSourcery/Sourcery_CodeBench_Lite_for_ARM_GNU_Linux/bin:${PATH}"
# End comments by InstallAnywhere on Tue Dec 27 12:04:28 CET 2011 1.

# use Angstrom standalone Toolchain

# source ~/angstrom_distro/cross-environment-setup_oe.sh

export PATH




# Raspberry nach
# http://www.hertaville.com/2012/09/28/development-environment-raspberry-pi-cross-compiler/

export PATH=$PATH:$HOME/rpi/tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian/bin

